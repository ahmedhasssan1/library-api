# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type authors {
  id: Int!
  name: String!
  info: String!
  age: Float
  books: [Books!]
}

type Users {
  id: Int!
  name: String!
  contact_info: String!
  email: String!
  password: String!
  book: [Books!]
  photo: String
}

type Books {
  id: Int!
  name: String!
  author: authors
  price: Int!
  user: Users
  photo: String
  published_at: DateTime
  discription: String
  getAuthor: authors!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type tokenDto {
  access_token: String!
}

type Cart {
  id: Float!
  user: Users!
  totalPrice: Float!
  discount: Float!
}

type CartItem {
  id: Int!
  cart: Cart!
  book: Books!
  bookPrice: Float!
  bookName: String!
  quantit: Int!
}

type UserCart {
  cartitems: [CartItem!]!
  cart: Cart!
}

type Query {
  getAllBooks: [Books!]!
  getbookAuthor(bookId: Float!): authors!
  getAuthorBooks(auhtorID: Int!): [Books!]!
  getOneBook(findBook: Int!): Books!
  findOneAuthor(id: Int!): authors!
  authors: [authors!]!
  getUser(getuserById: Int!): Users!
  getAllUsers: [Users!]!
  getallCarts: [Cart!]!
  getUserCart(userId: Int!): UserCart!
}

type Mutation {
  createBook(CreateBookWithAutor: createBookdto!): Books!
  updatePhotoBook(updatePhoto: updateDto!): Books!
  updateBook(updateBookData: UpdateBookDto!): Books!
  CreateAuthor(CreateAuthor: CreateAuthorDto!): authors!
  updateAuthor(updateAuthor: updateAuthorDto!): authors!
  uploadPhoto(createImageInput: uploadPhotoDto!): String!
  createUser(createUser: createUserDto!): Users!
  addBookToUser(bookToUser: BookToUserDto!): Users!
  deleteUser(userId: Int!): Boolean!
  updateUser(updateUser: UpdateUserDto!): Users!
  signIn(login: securityDto!): tokenDto!
  createcart(userId: Int!, discount: Int!): Cart!
  addCartItem(addBookIDAndUserId: bookToCartItemDto!): CartItem!
  decreaseQuantity(bookIDAndUserId: bookToCartItemDto!): Boolean!
  deletecartItem(bookIdAndUserId: bookToCartItemDto!): Boolean!
  updateDiscount(updateDiscount: DiscountDto!): String!
  checkout(productdata: ProductData!): String!
  sendemail(seendEmailDto: Sendemaildto!): String!
}

input createBookdto {
  name: String!
  authorID: Int
  price: Float!
  description: String!
  published_at: DateTime
  photo: Upload
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input updateDto {
  id: Int
  photo: Upload!
}

input UpdateBookDto {
  id: Int!
  name: String
  discription: String
}

input CreateAuthorDto {
  name: String!
  info: String!
  age: Float
}

input updateAuthorDto {
  id: Float!
  name: String!
  info: String!
}

input uploadPhotoDto {
  name: String
  contact_info: String
  email: String
  password: String
  file: Upload!
}

input createUserDto {
  name: String!
  contact_info: String!
  email: String!
  password: String!
  file: Upload!
}

input BookToUserDto {
  userId: Int!
  BookId: Int!
}

input UpdateUserDto {
  id: Int!
  name: String
  email: String!
}

input securityDto {
  email: String!
  password: String!
}

input bookToCartItemDto {
  userId: Int!
  bookId: Int!
}

input DiscountDto {
  discount: Int!
  userId: Int!
}

input ProductData {
  userId: Int!
  customerEmail: String!
}

input Sendemaildto {
  recipienst: [String!]!
  subject: String!
  html: String!
  text: String!
}